// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.13.0
// source: User.proto

package app_grpc_enterprise

import (
	_ "coding-grpc-gateway/grpc/google/api"
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// deprecated, pls use CodingUser instead
type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt        int64   `protobuf:"varint,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt        int64   `protobuf:"varint,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	LastLoginedAt    int64   `protobuf:"varint,4,opt,name=last_logined_at,json=lastLoginedAt,proto3" json:"last_logined_at,omitempty"`
	Status           int32   `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
	Role             int32   `protobuf:"varint,6,opt,name=role,proto3" json:"role,omitempty"`
	Email            string  `protobuf:"bytes,7,opt,name=email,proto3" json:"email,omitempty"`
	GlobalKey        string  `protobuf:"bytes,8,opt,name=global_key,json=globalKey,proto3" json:"global_key,omitempty"`
	Avatar           string  `protobuf:"bytes,9,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Gravatar         string  `protobuf:"bytes,10,opt,name=gravatar,proto3" json:"gravatar,omitempty"`
	Name             string  `protobuf:"bytes,11,opt,name=name,proto3" json:"name,omitempty"`
	NamePinyin       string  `protobuf:"bytes,12,opt,name=name_pinyin,json=namePinyin,proto3" json:"name_pinyin,omitempty"`
	Sex              int32   `protobuf:"varint,13,opt,name=sex,proto3" json:"sex,omitempty"`
	Phone            string  `protobuf:"bytes,14,opt,name=phone,proto3" json:"phone,omitempty"`
	Birthday         int64   `protobuf:"varint,15,opt,name=birthday,proto3" json:"birthday,omitempty"`
	Location         string  `protobuf:"bytes,16,opt,name=location,proto3" json:"location,omitempty"`
	Company          string  `protobuf:"bytes,17,opt,name=company,proto3" json:"company,omitempty"`
	Slogan           string  `protobuf:"bytes,18,opt,name=slogan,proto3" json:"slogan,omitempty"`
	Introduction     string  `protobuf:"bytes,19,opt,name=introduction,proto3" json:"introduction,omitempty"`
	Job              int32   `protobuf:"varint,20,opt,name=job,proto3" json:"job,omitempty"`
	Ip               string  `protobuf:"bytes,21,opt,name=ip,proto3" json:"ip,omitempty"`
	PointsLeft       float64 `protobuf:"fixed64,22,opt,name=points_left,json=pointsLeft,proto3" json:"points_left,omitempty"`
	PointsTotal      float64 `protobuf:"fixed64,23,opt,name=points_total,json=pointsTotal,proto3" json:"points_total,omitempty"`
	Balance          float64 `protobuf:"fixed64,24,opt,name=balance,proto3" json:"balance,omitempty"`
	PhoneValidation  int32   `protobuf:"varint,25,opt,name=phone_validation,json=phoneValidation,proto3" json:"phone_validation,omitempty"`
	Password         string  `protobuf:"bytes,26,opt,name=password,proto3" json:"password,omitempty"`
	EmailValidation  int32   `protobuf:"varint,27,opt,name=email_validation,json=emailValidation,proto3" json:"email_validation,omitempty"`
	PhoneCountryCode string  `protobuf:"bytes,28,opt,name=phone_country_code,json=phoneCountryCode,proto3" json:"phone_country_code,omitempty"`
	Country          string  `protobuf:"bytes,29,opt,name=country,proto3" json:"country,omitempty"`
	TeamId           int32   `protobuf:"varint,30,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	//    OWNER = 100;          // 创始人
	//    ADMIN = 90;           // 项目管理员
	//    MEMBER = 80;          // 项目成员
	//    MEMBER_NO_CODE = 75;  // 项目内，受限成员
	//    VISITOR = 70;         // 已登录访客角色
	//    GUEST = 60;           // 未登录访客
	Type int32 `protobuf:"varint,31,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_User_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_User_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_User_proto_rawDescGZIP(), []int{0}
}

func (x *User) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *User) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *User) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *User) GetLastLoginedAt() int64 {
	if x != nil {
		return x.LastLoginedAt
	}
	return 0
}

func (x *User) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *User) GetRole() int32 {
	if x != nil {
		return x.Role
	}
	return 0
}

func (x *User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *User) GetGlobalKey() string {
	if x != nil {
		return x.GlobalKey
	}
	return ""
}

func (x *User) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *User) GetGravatar() string {
	if x != nil {
		return x.Gravatar
	}
	return ""
}

func (x *User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *User) GetNamePinyin() string {
	if x != nil {
		return x.NamePinyin
	}
	return ""
}

func (x *User) GetSex() int32 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *User) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *User) GetBirthday() int64 {
	if x != nil {
		return x.Birthday
	}
	return 0
}

func (x *User) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *User) GetCompany() string {
	if x != nil {
		return x.Company
	}
	return ""
}

func (x *User) GetSlogan() string {
	if x != nil {
		return x.Slogan
	}
	return ""
}

func (x *User) GetIntroduction() string {
	if x != nil {
		return x.Introduction
	}
	return ""
}

func (x *User) GetJob() int32 {
	if x != nil {
		return x.Job
	}
	return 0
}

func (x *User) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *User) GetPointsLeft() float64 {
	if x != nil {
		return x.PointsLeft
	}
	return 0
}

func (x *User) GetPointsTotal() float64 {
	if x != nil {
		return x.PointsTotal
	}
	return 0
}

func (x *User) GetBalance() float64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

func (x *User) GetPhoneValidation() int32 {
	if x != nil {
		return x.PhoneValidation
	}
	return 0
}

func (x *User) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *User) GetEmailValidation() int32 {
	if x != nil {
		return x.EmailValidation
	}
	return 0
}

func (x *User) GetPhoneCountryCode() string {
	if x != nil {
		return x.PhoneCountryCode
	}
	return ""
}

func (x *User) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *User) GetTeamId() int32 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

func (x *User) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

// deprecated, pls use CodingUser instead
type UserSimple struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Status    int32  `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	GlobalKey string `protobuf:"bytes,3,opt,name=global_key,json=globalKey,proto3" json:"global_key,omitempty"`
	Avatar    string `protobuf:"bytes,4,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Name      string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Email     string `protobuf:"bytes,6,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *UserSimple) Reset() {
	*x = UserSimple{}
	if protoimpl.UnsafeEnabled {
		mi := &file_User_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserSimple) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSimple) ProtoMessage() {}

func (x *UserSimple) ProtoReflect() protoreflect.Message {
	mi := &file_User_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSimple.ProtoReflect.Descriptor instead.
func (*UserSimple) Descriptor() ([]byte, []int) {
	return file_User_proto_rawDescGZIP(), []int{1}
}

func (x *UserSimple) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserSimple) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UserSimple) GetGlobalKey() string {
	if x != nil {
		return x.GlobalKey
	}
	return ""
}

func (x *UserSimple) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *UserSimple) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserSimple) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type GetUserByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int32 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetUserByIdRequest) Reset() {
	*x = GetUserByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_User_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserByIdRequest) ProtoMessage() {}

func (x *GetUserByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_User_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserByIdRequest.ProtoReflect.Descriptor instead.
func (*GetUserByIdRequest) Descriptor() ([]byte, []int) {
	return file_User_proto_rawDescGZIP(), []int{2}
}

func (x *GetUserByIdRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetUserByGkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GlobalKey string `protobuf:"bytes,1,opt,name=global_key,json=globalKey,proto3" json:"global_key,omitempty"`
}

func (x *GetUserByGkRequest) Reset() {
	*x = GetUserByGkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_User_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserByGkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserByGkRequest) ProtoMessage() {}

func (x *GetUserByGkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_User_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserByGkRequest.ProtoReflect.Descriptor instead.
func (*GetUserByGkRequest) Descriptor() ([]byte, []int) {
	return file_User_proto_rawDescGZIP(), []int{3}
}

func (x *GetUserByGkRequest) GetGlobalKey() string {
	if x != nil {
		return x.GlobalKey
	}
	return ""
}

type RefrushOaUserInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RefrushOaUserInfoRequest) Reset() {
	*x = RefrushOaUserInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_User_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefrushOaUserInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefrushOaUserInfoRequest) ProtoMessage() {}

func (x *RefrushOaUserInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_User_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefrushOaUserInfoRequest.ProtoReflect.Descriptor instead.
func (*RefrushOaUserInfoRequest) Descriptor() ([]byte, []int) {
	return file_User_proto_rawDescGZIP(), []int{4}
}

type RefrushOaUserInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Size int32 `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *RefrushOaUserInfoResponse) Reset() {
	*x = RefrushOaUserInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_User_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefrushOaUserInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefrushOaUserInfoResponse) ProtoMessage() {}

func (x *RefrushOaUserInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_User_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefrushOaUserInfoResponse.ProtoReflect.Descriptor instead.
func (*RefrushOaUserInfoResponse) Descriptor() ([]byte, []int) {
	return file_User_proto_rawDescGZIP(), []int{5}
}

func (x *RefrushOaUserInfoResponse) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

type FindByRoleIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId int32 `protobuf:"varint,1,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
}

func (x *FindByRoleIdRequest) Reset() {
	*x = FindByRoleIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_User_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindByRoleIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindByRoleIdRequest) ProtoMessage() {}

func (x *FindByRoleIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_User_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindByRoleIdRequest.ProtoReflect.Descriptor instead.
func (*FindByRoleIdRequest) Descriptor() ([]byte, []int) {
	return file_User_proto_rawDescGZIP(), []int{6}
}

func (x *FindByRoleIdRequest) GetRoleId() int32 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

type FindByRoleIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users []*User `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
}

func (x *FindByRoleIdResponse) Reset() {
	*x = FindByRoleIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_User_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindByRoleIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindByRoleIdResponse) ProtoMessage() {}

func (x *FindByRoleIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_User_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindByRoleIdResponse.ProtoReflect.Descriptor instead.
func (*FindByRoleIdResponse) Descriptor() ([]byte, []int) {
	return file_User_proto_rawDescGZIP(), []int{7}
}

func (x *FindByRoleIdResponse) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

var File_User_proto protoreflect.FileDescriptor

var file_User_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x61, 0x70,
	0x70, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73,
	0x65, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xe3, 0x06, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6c,
	0x6f, 0x67, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0d, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x65, 0x64, 0x41, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x4b, 0x65, 0x79, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x67, 0x72, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x72, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x5f,
	0x70, 0x69, 0x6e, 0x79, 0x69, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x61,
	0x6d, 0x65, 0x50, 0x69, 0x6e, 0x79, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x73, 0x65, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x12, 0x1a, 0x0a, 0x08,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6c, 0x6f, 0x67, 0x61, 0x6e, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x6c, 0x6f, 0x67, 0x61, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e,
	0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10,
	0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6a, 0x6f, 0x62,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70,
	0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x18,
	0x16, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x4c, 0x65, 0x66,
	0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x5f, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x17, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18,
	0x18, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x29,
	0x0a, 0x10, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x19, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x2c, 0x0a, 0x12, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x65, 0x61, 0x6d,
	0x5f, 0x69, 0x64, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x95, 0x01, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x53, 0x69,
	0x6d, 0x70, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a,
	0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x4b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x2d, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x33, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x47, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x4b, 0x65,
	0x79, 0x22, 0x1a, 0x0a, 0x18, 0x52, 0x65, 0x66, 0x72, 0x75, 0x73, 0x68, 0x4f, 0x61, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x2f, 0x0a,
	0x19, 0x52, 0x65, 0x66, 0x72, 0x75, 0x73, 0x68, 0x4f, 0x61, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x2e,
	0x0a, 0x13, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x47,
	0x0a, 0x14, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x32, 0xb1, 0x03, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x7a, 0x0a, 0x07, 0x67, 0x65, 0x74, 0x42, 0x79,
	0x49, 0x64, 0x12, 0x27, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x6e,
	0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73,
	0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x22, 0x2b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x22, 0x20,
	0x2f, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x2d, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x67, 0x65, 0x74, 0x42, 0x79, 0x49, 0x64,
	0x3a, 0x01, 0x2a, 0x12, 0x4d, 0x0a, 0x07, 0x67, 0x65, 0x74, 0x42, 0x79, 0x47, 0x4b, 0x12, 0x27,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70,
	0x72, 0x69, 0x73, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x47, 0x6b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x72, 0x0a, 0x11, 0x72, 0x65, 0x66, 0x72, 0x75, 0x73, 0x68, 0x4f, 0x61, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2d, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x2e, 0x52, 0x65,
	0x66, 0x72, 0x75, 0x73, 0x68, 0x4f, 0x61, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x66,
	0x72, 0x75, 0x73, 0x68, 0x4f, 0x61, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x63, 0x0a, 0x0c, 0x66, 0x69, 0x6e, 0x64, 0x42, 0x79,
	0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x28, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x2e, 0x46, 0x69, 0x6e,
	0x64, 0x42, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x29, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x52, 0x6f, 0x6c,
	0x65, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x22, 0x0a, 0x12, 0x6e,
	0x65, 0x74, 0x2e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x42, 0x09, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x88, 0x01, 0x01, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_User_proto_rawDescOnce sync.Once
	file_User_proto_rawDescData = file_User_proto_rawDesc
)

func file_User_proto_rawDescGZIP() []byte {
	file_User_proto_rawDescOnce.Do(func() {
		file_User_proto_rawDescData = protoimpl.X.CompressGZIP(file_User_proto_rawDescData)
	})
	return file_User_proto_rawDescData
}

var file_User_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_User_proto_goTypes = []interface{}{
	(*User)(nil),                      // 0: app.grpc.enterprise.User
	(*UserSimple)(nil),                // 1: app.grpc.enterprise.UserSimple
	(*GetUserByIdRequest)(nil),        // 2: app.grpc.enterprise.GetUserByIdRequest
	(*GetUserByGkRequest)(nil),        // 3: app.grpc.enterprise.GetUserByGkRequest
	(*RefrushOaUserInfoRequest)(nil),  // 4: app.grpc.enterprise.RefrushOaUserInfoRequest
	(*RefrushOaUserInfoResponse)(nil), // 5: app.grpc.enterprise.RefrushOaUserInfoResponse
	(*FindByRoleIdRequest)(nil),       // 6: app.grpc.enterprise.FindByRoleIdRequest
	(*FindByRoleIdResponse)(nil),      // 7: app.grpc.enterprise.FindByRoleIdResponse
}
var file_User_proto_depIdxs = []int32{
	0, // 0: app.grpc.enterprise.FindByRoleIdResponse.users:type_name -> app.grpc.enterprise.User
	2, // 1: app.grpc.enterprise.UserService.getById:input_type -> app.grpc.enterprise.GetUserByIdRequest
	3, // 2: app.grpc.enterprise.UserService.getByGK:input_type -> app.grpc.enterprise.GetUserByGkRequest
	4, // 3: app.grpc.enterprise.UserService.refrushOaUserInfo:input_type -> app.grpc.enterprise.RefrushOaUserInfoRequest
	6, // 4: app.grpc.enterprise.UserService.findByRoleId:input_type -> app.grpc.enterprise.FindByRoleIdRequest
	0, // 5: app.grpc.enterprise.UserService.getById:output_type -> app.grpc.enterprise.User
	0, // 6: app.grpc.enterprise.UserService.getByGK:output_type -> app.grpc.enterprise.User
	5, // 7: app.grpc.enterprise.UserService.refrushOaUserInfo:output_type -> app.grpc.enterprise.RefrushOaUserInfoResponse
	7, // 8: app.grpc.enterprise.UserService.findByRoleId:output_type -> app.grpc.enterprise.FindByRoleIdResponse
	5, // [5:9] is the sub-list for method output_type
	1, // [1:5] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_User_proto_init() }
func file_User_proto_init() {
	if File_User_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_User_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_User_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserSimple); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_User_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_User_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserByGkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_User_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefrushOaUserInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_User_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefrushOaUserInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_User_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindByRoleIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_User_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindByRoleIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_User_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_User_proto_goTypes,
		DependencyIndexes: file_User_proto_depIdxs,
		MessageInfos:      file_User_proto_msgTypes,
	}.Build()
	File_User_proto = out.File
	file_User_proto_rawDesc = nil
	file_User_proto_goTypes = nil
	file_User_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// UserServiceClient is the client API for UserService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserServiceClient interface {
	GetById(ctx context.Context, in *GetUserByIdRequest, opts ...grpc.CallOption) (*User, error)
	GetByGK(ctx context.Context, in *GetUserByGkRequest, opts ...grpc.CallOption) (*User, error)
	RefrushOaUserInfo(ctx context.Context, in *RefrushOaUserInfoRequest, opts ...grpc.CallOption) (*RefrushOaUserInfoResponse, error)
	FindByRoleId(ctx context.Context, in *FindByRoleIdRequest, opts ...grpc.CallOption) (*FindByRoleIdResponse, error)
}

type userServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewUserServiceClient(cc grpc.ClientConnInterface) UserServiceClient {
	return &userServiceClient{cc}
}

func (c *userServiceClient) GetById(ctx context.Context, in *GetUserByIdRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/app.grpc.enterprise.UserService/getById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) GetByGK(ctx context.Context, in *GetUserByGkRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/app.grpc.enterprise.UserService/getByGK", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) RefrushOaUserInfo(ctx context.Context, in *RefrushOaUserInfoRequest, opts ...grpc.CallOption) (*RefrushOaUserInfoResponse, error) {
	out := new(RefrushOaUserInfoResponse)
	err := c.cc.Invoke(ctx, "/app.grpc.enterprise.UserService/refrushOaUserInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) FindByRoleId(ctx context.Context, in *FindByRoleIdRequest, opts ...grpc.CallOption) (*FindByRoleIdResponse, error) {
	out := new(FindByRoleIdResponse)
	err := c.cc.Invoke(ctx, "/app.grpc.enterprise.UserService/findByRoleId", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserServiceServer is the server API for UserService service.
type UserServiceServer interface {
	GetById(context.Context, *GetUserByIdRequest) (*User, error)
	GetByGK(context.Context, *GetUserByGkRequest) (*User, error)
	RefrushOaUserInfo(context.Context, *RefrushOaUserInfoRequest) (*RefrushOaUserInfoResponse, error)
	FindByRoleId(context.Context, *FindByRoleIdRequest) (*FindByRoleIdResponse, error)
}

// UnimplementedUserServiceServer can be embedded to have forward compatible implementations.
type UnimplementedUserServiceServer struct {
}

func (*UnimplementedUserServiceServer) GetById(context.Context, *GetUserByIdRequest) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetById not implemented")
}
func (*UnimplementedUserServiceServer) GetByGK(context.Context, *GetUserByGkRequest) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetByGK not implemented")
}
func (*UnimplementedUserServiceServer) RefrushOaUserInfo(context.Context, *RefrushOaUserInfoRequest) (*RefrushOaUserInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RefrushOaUserInfo not implemented")
}
func (*UnimplementedUserServiceServer) FindByRoleId(context.Context, *FindByRoleIdRequest) (*FindByRoleIdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindByRoleId not implemented")
}

func RegisterUserServiceServer(s *grpc.Server, srv UserServiceServer) {
	s.RegisterService(&_UserService_serviceDesc, srv)
}

func _UserService_GetById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserByIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).GetById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.grpc.enterprise.UserService/GetById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).GetById(ctx, req.(*GetUserByIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_GetByGK_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserByGkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).GetByGK(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.grpc.enterprise.UserService/GetByGK",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).GetByGK(ctx, req.(*GetUserByGkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_RefrushOaUserInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RefrushOaUserInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).RefrushOaUserInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.grpc.enterprise.UserService/RefrushOaUserInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).RefrushOaUserInfo(ctx, req.(*RefrushOaUserInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_FindByRoleId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindByRoleIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).FindByRoleId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.grpc.enterprise.UserService/FindByRoleId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).FindByRoleId(ctx, req.(*FindByRoleIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "app.grpc.enterprise.UserService",
	HandlerType: (*UserServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "getById",
			Handler:    _UserService_GetById_Handler,
		},
		{
			MethodName: "getByGK",
			Handler:    _UserService_GetByGK_Handler,
		},
		{
			MethodName: "refrushOaUserInfo",
			Handler:    _UserService_RefrushOaUserInfo_Handler,
		},
		{
			MethodName: "findByRoleId",
			Handler:    _UserService_FindByRoleId_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "User.proto",
}
